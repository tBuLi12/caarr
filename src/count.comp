#version 450

#extension GL_KHR_shader_subgroup_arithmetic: enable
#extension GL_KHR_shader_subgroup_vote: enable

layout (local_size_x = 1024) in;

struct Rect {
    uvec2 pos;
    uvec2 size;
    vec4 bg_color;
    uint parent_idx;
    uint children_start;
    uint children_end;
};

layout(set = 0, binding = 0) readonly buffer Rects {
    Rect data[];
} rects;

layout (set = 0, binding = 1, rgba8) uniform image2D image;

layout(set = 0, binding = 2) readonly buffer VerticalRaster {
    uint data[];
} vertical;

layout(set = 0, binding = 3) readonly buffer HorizontalRaster {
    uint data[];
} horizontal;

layout(set = 0, binding = 4) buffer Out {
    uint data[];
} out_buffer;

void main() {
    uint rect_idx = gl_GlobalInvocationID.x;
    Rect rect = rects.data[rect_idx];

    if (rect.children_start != rect.children_end) {
        return;
    }

    uint count = 1;
    uint parent_idx = rect.parent_idx;


    while (parent_idx != 0) {
        uint idx = parent_idx - 1;
        Rect parent = rects.data[idx];
        atomicAdd(out_buffer.data[idx * 2], count);
        uint added = atomicAdd(out_buffer.data[idx * 2 + 1], 1);
        count = out_buffer.data[idx * 2];

        if (added + 1 == parent.children_end - parent.children_start) {
            parent_idx = parent.parent_idx;
        } else {
            break;
        }
    }
}
